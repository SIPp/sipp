/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _SIPP-RPC_H_RPCGEN
#define _SIPP-RPC_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


struct callcounter {
	int incomingcalls;
	int outgoingcalls;
	int successcalls;
	int failurecalls;
};
typedef struct callcounter callcounter;

typedef callcounter callcounter_t;

#define SIPPRPCPROG 0x20000002
#define SIPPRPCVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define GETCALLCOUNTER 1
extern  enum clnt_stat getcallcounter_1(callcounter_t *, callcounter_t *, CLIENT *);
extern  bool_t getcallcounter_1_svc(callcounter_t *, callcounter_t *, struct svc_req *);
#define ENABLELOG4AUTOANSWER 2
extern  enum clnt_stat enablelog4autoanswer_1(void *, bool_t *, CLIENT *);
extern  bool_t enablelog4autoanswer_1_svc(void *, bool_t *, struct svc_req *);
#define DISABLELOG4AUTOANSWER 3
extern  enum clnt_stat disablelog4autoanswer_1(void *, bool_t *, CLIENT *);
extern  bool_t disablelog4autoanswer_1_svc(void *, bool_t *, struct svc_req *);
extern int sipprpcprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define GETCALLCOUNTER 1
extern  enum clnt_stat getcallcounter_1();
extern  bool_t getcallcounter_1_svc();
#define ENABLELOG4AUTOANSWER 2
extern  enum clnt_stat enablelog4autoanswer_1();
extern  bool_t enablelog4autoanswer_1_svc();
#define DISABLELOG4AUTOANSWER 3
extern  enum clnt_stat disablelog4autoanswer_1();
extern  bool_t disablelog4autoanswer_1_svc();
extern int sipprpcprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_callcounter (XDR *, callcounter*);
extern  bool_t xdr_callcounter_t (XDR *, callcounter_t*);

#else /* K&R C */
extern bool_t xdr_callcounter ();
extern bool_t xdr_callcounter_t ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_SIPP-RPC_H_RPCGEN */
