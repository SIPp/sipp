/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "sipp-rpc.h"


void
sipprpcprog_1(char *command)
{
	char *host = "127.0.0.1";
	CLIENT *clnt;
	enum clnt_stat retval_1;
	callcounter_t result_1;
	callcounter_t  getcallcounter_1_arg;
	enum clnt_stat retval_2;
	bool_t result_2;
	char *enablelog4autoanswer_1_arg;
	enum clnt_stat retval_3;
	bool_t result_3;
	char *disablelog4autoanswer_1_arg;

#ifndef	DEBUG
	clnt = clnt_create (host, SIPPRPCPROG, SIPPRPCVERS, "udp");
	if (clnt == NULL) {
		clnt_pcreateerror (host);
		exit (1);
	}
#endif	/* DEBUG */

	if (strcmp(command,"get_callcount") ==0 ) {
		retval_1 = getcallcounter_1(&getcallcounter_1_arg, &result_1, clnt);
		if (retval_1 != RPC_SUCCESS) {
			clnt_perror (clnt, "call failed");
		} else {
			printf("Total incoming calls: %d\n",result_1.incomingcalls);
			printf("Total outgoing calls: %d\n",result_1.outgoingcalls);
			printf("Total success calls: %d\n",result_1.successcalls);
			printf("Total failure calls: %d\n",result_1.failurecalls);
		}
	}
	if (strcmp(command,"enable_log4aa") ==0 ) {
		retval_2 = enablelog4autoanswer_1((void*)&enablelog4autoanswer_1_arg, &result_2, clnt);
		if (retval_2 != RPC_SUCCESS) {
			clnt_perror (clnt, "call failed");
		} else {
			printf("Error log for auto response enabled.\n");
		}
	}
	if (strcmp(command,"disable_log4aa") ==0 ) {
		retval_3 = disablelog4autoanswer_1((void*)&disablelog4autoanswer_1_arg, &result_3, clnt);
		if (retval_3 != RPC_SUCCESS) {
			clnt_perror (clnt, "call failed");
		} else {
			printf("Error log for auto response disabled.\n");
		}
	}
#ifndef	DEBUG
	clnt_destroy (clnt);
#endif	 /* DEBUG */
}


int
main (int argc, char *argv[])
{
	char *command;

	if (argc < 2) {
		printf ("usage: %s [get_callcount|enable_log4aa|disable_log4aa]\n", argv[0]);
		exit (1);
	}
	command = argv[1];
	if (strcmp(command,"get_callcount") != 0 &&
	    strcmp(command,"enable_log4aa") != 0 &&
	    strcmp(command,"disable_log4aa") != 0 ) {
		printf ("usage: %s [get_callcount|enable_log4aa|disable_log4aa]\n", argv[0]);
		exit (1);
	}
	sipprpcprog_1 (command);
exit (0);
}
